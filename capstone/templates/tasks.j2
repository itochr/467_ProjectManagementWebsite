{% extends 'nav.j2' %}
{% block head %}
<title>Tasks</title>
<link rel="stylesheet" href="{{ url_for('static', filename='css/tasks.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/projects.css') }}">
<link rel="stylesheet" href="{{ url_for('static', filename='css/admin.css') }}">
{% endblock %}
{% block body %}

<div class="content">

<div id ="hello">
	{% if accountUsername is defined %}
	<h1><span class="username">{{accountUsername}}</span>Tasks</h1>
	{% else %}
		Welcome <span class="accountName"> Administrator </span> to Opinionated Project Management.
		{% endif %}

	{% if screenMsg is defined %}
			<div class="announcement">{{ screenMsg }}</div>
	{% endif %}
</div>

<div class="kanban-board">
{% for status in statuses %}
<div class="status-column" data-status-id="{{status.statusID}}" data-status="{{status.statusName}}" ondrop="drop(event)" ondragover="allowDrop(event)">
            <h2>{{status.statusName}}</h2>
            <div class="column-content">
			{% for userTask in userTasks %}
			{% if userTask.taskStatus == status.statusID %}
                <div class="project-card"
                     draggable="true"
                     ondragstart="drag(event)"

                     id="{{ userTask.taskID }}">
                    <div class="project-content">
                        <h3>{{ userTask.taskSubject }}</h3>
						<p>Status: {{ userTask.statusName }}</p>
						<p>Start: {{ userTask.taskAssigned }}</p>
                        <p>Due: {{ userTask.taskDue }}</p>
                    </div>
                </div>
				{% endif %}
                {% endfor %}
            </div>
        </div>
{% endfor %}
</div>
<div class="project-card add-new-card" onclick="openCreateModal()">
            <div class="project-content">
                <div class="add-project-placeholder">
                    <h3>Create New Task</h3>
                    <span class="plus-symbol">+</span>
                </div>
            </div>
        </div>







  {# {% for userTask in userTasks | unique(attribute="taskID") %}
  <a class="task-card"><div class="task-content">{{userTask.taskSubject}}</div></a>
  {% endfor %} #}

{#
  {% for userTask in userTasks %}
  <div class="task-card" onclick='showProjectDetails({{ userTask|tojson|safe }})'>
    <div class="task-content">
      <h3>{{ userTask.taskSubject }}</h3>
      <p>Status: {{ userTask.statusName }}</p>
      <p>Due: {{ userTask.taskDue }}</p>
    </div>
  </div>
  {% endfor %}
  </div> #}

{% if userTasks %}
{% if teamTasks %}
{% if statuses %}
<div id="tasks-as-tables">
<h2>User Tasks as a table</h2>
		<div class="instruction">
			<table>
				<thead>
					<tr>
						{% for key in userTasks[0].keys() %}
						<th>{{ key }}</th>
						{% endfor %}
					</tr>
				<tbody>
					{% for userTask in userTasks %}
					<tr>
						{% for key in userTask.keys() %}
						<td>{{userTask[key]}}</td>
						{% endfor %}
					</tr>
					{% endfor %}
			</table>
		</div>

<h2>Team Tasks as a table</h2>
		<div class="instruction">
			<table>
				<thead>
					<tr>
						{% for key in teamTasks[0].keys() %}
						<th>{{ key }}</th>
						{% endfor %}
					</tr>
				<tbody>
					{% for teamTask in teamTasks %}
					<tr>
						{% for key in teamTask.keys() %}
						<td>{{teamTask[key]}}</td>
						{% endfor %}
					</tr>
					{% endfor %}
			</table>
		</div>
</div>

<div id="addTaskDiv">
	<!-- form to INSERT new data into Tasks-->
	<form id="addTask" action="/tasks" method="post">
		<legend><strong>Add Task</strong></legend>
		<fieldset>
			<select name="tAssignee" id="tAssignee">
				<option value="-1">Choose Assignee</option>
				{% for teamTask in teamTasks| unique(attribute="accountID") | sort(attribute="accountFirstName") %}
				<option value="{{teamTask.accountID}}">{{teamTask.accountFirstName}} {{teamTask.accountLastName}}</option>
				{% endfor %}
			</select>
			<label for="assigned">Assigned Date</label>
			<input type="date" id="tAssignedDate" name="tAssignedDate" required>
			<label for="due">Due Date</label>
			<input type="date" class="" id="tDueDate" name="tDueDate" required>
			<select name="tStatus" id="tStatus">
				<option value="-1">Choose Status</option>
				{% for status in statuses|  sort(attribute="statusName")%}
				<option value="{{status.statusID}}">{{status.statusName}}</option>
				{% endfor %}
			</select>
			<select name="tSprint" id="tSprint">
				<option value="-1">Choose Sprint</option>
				{% for teamTask in teamTasks| unique(attribute="taskSprint") | sort(attribute="taskSprint") %}
				<option value="{{teamTask.taskSprint}}">{{teamTask.taskSprint}} : {{teamTask.sprintStart}} - {{teamTask.sprintEnd}}</option>
				{% endfor %}
			</select>
			<label for="subject">Subject</label>
			<input type="text" class="" id="tSubject" name="tSubject" placeholder="" required>
		</fieldset>
		<!-- Create 'Add Task' button -->
		<input type="submit" value="Add Task" name="addTaskSubmit" class="btn btn-primary" style="margin:.5rem;">
	</form>
</div>

{% endif %}
{% endif %}
{% endif %}
</div>



<script>
function openCreateModal() {
    document.getElementById('createProjectModal').style.display = 'block';
}

function showProjectDetails(project) {
    console.log('Project:', project);
    document.getElementById('projectID').value = project.projectID;
    document.getElementById('editProjectName').value = project.projectName;
    document.getElementById('editProjectStart').value = project.projectStart;
    document.getElementById('editProjectEnd').value = project.projectEnd;
    document.getElementById('projectDetailsModal').style.display = 'block';
}

function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

function confirmDelete() {
    if (confirm('Are you sure you want to delete this project?')) {
        const projectID = document.getElementById('projectID').value;
        document.getElementById('deleteProjectID').value = projectID;
        document.getElementById('deleteForm').submit();
    }
}
// drag and drop functions
function drag(event) {
    event.dataTransfer.setData("text", event.target.id);
}

function allowDrop(event) {
    event.preventDefault();
}

function drop(event) {
    event.preventDefault();
    const projectId = event.dataTransfer.getData("text");
    const projectCard = document.getElementById(projectId);

    // Find the closest status-column div
    const column = event.target.closest('.status-column');
    if (column) {
        const columnContent = column.querySelector('.column-content');
        columnContent.appendChild(projectCard);

        // Get the new task status from the column's data-status attribute
        const newStatusName = column.getAttribute('data-status');
		const newStatusID = column.getAttribute('data-status-id');

        // Send AJAX POST request to update the task status
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/updateTaskStatus", true);
        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.send(JSON.stringify({
            taskID: projectId,  // The task ID from the dragged element
            taskStatus: newStatusID  // The new status from the drop target
        }));
    }
}

window.onclick = function(event) {
    if (event.target.classList.contains('modal')) {
        event.target.style.display = 'none';
    }
};

</script>

{% endblock %}
